import streamlit as st
import pandas as pd
import plotly.graph_objects as go
from datetime import datetime, timedelta

# ---------- Config ----------
st.set_page_config(page_title="ğŸ“¦ Product Sales Dashboard", layout="wide")

# ---------- Load Data ----------
@st.cache_data
def load_data():
    df = pd.read_excel("sorted_file.xlsx")
    df['date'] = pd.to_datetime(df['date'])
    return df

df = load_data()

# ---------- Time Range Selector ----------
time_options = {
    "1 Week": 7,
    "1 Month": 30,
    "1 Year": 365,
    "2 Years": 730
}
col_time, col_metric = st.columns([3, 1])
with col_time:
    time_selection = st.radio("Select Time Range:", list(time_options.keys()), horizontal=True)
reference_date = df['date'].max()
start_date = reference_date - timedelta(days=time_options[time_selection])
df_filtered = df[(df['date'] >= start_date) & (df['date'] <= reference_date)]

# ---------- Metrics: Total Orders Sold ----------
total_orders = df_filtered['total_orders'].sum()
prev_period_start = start_date - timedelta(days=time_options[time_selection])
prev_period = df[(df['date'] >= prev_period_start) & (df['date'] < start_date)]
prev_total_orders = prev_period['total_orders'].sum()
delta = total_orders - prev_total_orders
delta_percent = (delta / prev_total_orders * 100) if prev_total_orders else 0

with col_metric:
    st.metric(label="Total Orders Sold", value=f"{total_orders:,}", delta=f"{delta_percent:.1f}%")

# ---------- Data Prep ----------
top_products = df_filtered.groupby('product')['total_orders'].sum().reset_index()
top_products = top_products.sort_values(by='total_orders', ascending=False)

# ---------- Layout ----------
col_chart, col_top = st.columns([2, 1])

# All Product Chart - Vertical Bar, scrollable
with col_chart:
    st.markdown("**All Product Performance**")
    all_products = top_products.sort_values(by='total_orders', ascending=False)
    fig_all = go.Figure(go.Bar(
        x=all_products['product'],
        y=all_products['total_orders'],
        marker_color='#4CAF50'
    ))
    fig_all.update_layout(
        height=400,
        margin=dict(l=0, r=0, t=10, b=10),
        showlegend=False,
        plot_bgcolor='rgba(50,50,100,0.8)',
        xaxis=dict(
            tickangle=45,
            automargin=True,
            range=[-0.5, 10.5],
            fixedrange=False
        ),
        yaxis_title="Total Orders"
    )
    st.plotly_chart(fig_all, use_container_width=True)

# Top 5 Products - Horizontal
with col_top:
    st.markdown("**Top 5 Selling Products**")
    top_5 = top_products.head(5)
    fig_top = go.Figure(go.Bar(
        y=top_5['product'],
        x=top_5['total_orders'],
        orientation='h',
        marker_color='#FF6B6B'
    ))
    fig_top.update_layout(
        height=400,
        margin=dict(l=0, r=0, t=10, b=10),
        showlegend=False,
        plot_bgcolor='rgba(50,50,100,0.8)',
        xaxis_title="Total Orders"
    )
    st.plotly_chart(fig_top, use_container_width=True)
