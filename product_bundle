import pandas as pd
import plotly.express as px
from mlxtend.preprocessing import TransactionEncoder
from mlxtend.frequent_patterns import fpgrowth, association_rules
import warnings
warnings.filterwarnings("ignore")

# Step 1: Load the Excel file
df = pd.read_excel("orders.xlsx")

# Step 2: Group products by order_id to create transactions
transactions = df.groupby('order_id')['product'].apply(list).tolist()

# Step 3: Encode the transactions
te = TransactionEncoder()
te_ary = te.fit(transactions).transform(transactions)
df_encoded = pd.DataFrame(te_ary, columns=te.columns_)

# Step 4: FP-Growth algorithm
frequent_itemsets = fpgrowth(df_encoded, min_support=0.01, use_colnames=True)

# Step 5: Association rules
rules = association_rules(frequent_itemsets, metric="confidence", min_threshold=0.5)

# Step 6: Filter best bundles
best_bundles = rules[
    (rules['support'] >= 0.02) &
    (rules['confidence'] >= 0.6) &
    (rules['lift'] >= 1.2)
].copy()

# Step 7: Create full bar chart (all strong bundles)
best_bundles["rule"] = best_bundles["antecedents"].apply(lambda x: ', '.join(list(x))) + " → " + best_bundles["consequents"].apply(lambda x: ', '.join(list(x)))
fig_bar = px.bar(
    best_bundles.sort_values(by="lift", ascending=False),
    x="lift",
    y="rule",
    orientation='h',
    title="All High-Confidence Product Bundles (Lift ≥ 1.2)",
    labels={"lift": "Lift", "rule": "Product Bundle"},
    height=25 * len(best_bundles)  # Auto-scale height
)
fig_bar.show()

# Step 8: Show the table
import ace_tools as tools
tools.display_dataframe_to_user(
    name="Best Product Bundles Table",
    dataframe=best_bundles[['antecedents', 'consequents', 'support', 'confidence', 'lift']]
)

