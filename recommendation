import streamlit as st
import pandas as pd
from mlxtend.preprocessing import TransactionEncoder
from mlxtend.frequent_patterns import fpgrowth, association_rules

# Load transaction data
file_path = "orders_details.xlsx"
df = pd.read_excel(file_path)
df['Items Bought'] = df['Items Bought'].apply(lambda x: x.split(','))

# Encode transactions
te = TransactionEncoder()
te_ary = te.fit(df['Items Bought']).transform(df['Items Bought'])
df_encoded = pd.DataFrame(te_ary, columns=te.columns_)

# FP-Growth for bundles
frequent_itemsets = fpgrowth(df_encoded, min_support=0.05, use_colnames=True)
frequent_itemsets['support_count'] = frequent_itemsets['support'] * len(df)
frequent_itemsets['length'] = frequent_itemsets['itemsets'].apply(lambda x: len(x))
bundle_itemsets = frequent_itemsets[frequent_itemsets['length'] >= 2]

# Association rules for recommendations
rules = association_rules(frequent_itemsets, metric="confidence", min_threshold=0.6)
rules = rules.sort_values(by='confidence', ascending=False)

st.set_page_config(page_title="Product Bundling & Recommendations", layout="wide")
st.title("🧠 Smart Product Suggestions")

# --- Bundle Cards as 3-column grid ---
st.subheader("✨ Popular Product Combos")
columns = st.columns(3)
for i, (index, row) in enumerate(bundle_itemsets.iterrows()):
    col = columns[i % 3]
    with col:
        st.markdown(f"""
            <div style='border: 2px solid #ddd; border-radius: 12px; padding: 20px; margin: 10px 0; background-color: #fdfdfd; font-size: 18px;'>
                <h4 style='color:#333;'>Bundle with {row['length']} items</h4>
                <ul style='padding-left: 20px;'>
                    {''.join([f"<li style='margin-bottom: 6px;'><strong>{item}</strong></li>" for item in row['itemsets']])}
                </ul>
                <p><strong>Seen in:</strong> {int(row['support_count'])} orders</p>
                <button style='padding: 6px 12px; font-size: 15px; background-color: #4CAF50; color: white; border: none; border-radius: 8px;'>💡 Suggest this Combo</button>
            </div>
        """, unsafe_allow_html=True)

# --- Recommendation UI ---
st.subheader("🔎 Smart Suggestions")
for idx, row in rules.iterrows():
    with st.container():
        antecedents = ', '.join([f"<span style='font-weight:bold; color:#0d6efd;'>{a}</span>" for a in row['antecedents']])
        consequents = ', '.join([f"<span style='font-weight:bold; color:#198754;'>{c}</span>" for c in row['consequents']])
        st.markdown(f"""
            <div style='border: 2px solid #ccc; border-radius: 14px; padding: 24px; margin: 12px 0; background-color: #f7f9fc; font-size: 18px;'>
                <p><strong>🤔 Customers who bought:</strong></p>
                <p style='margin-left: 20px;'>{antecedents}</p>
                <p style='font-size: 24px; text-align: center;'>⬇️</p>
                <p><strong>Often also buy:</strong></p>
                <p style='margin-left: 20px;'>{consequents}</p>
                <p><strong>Chance they'll buy this too:</strong> {row['confidence'] * 100:.0f}%</p>
                <button style='padding: 6px 12px; font-size: 15px; background-color: #ff9800; color: white; border: none; border-radius: 8px;'>🔍 Show Similar Patterns</button>
            </div>
        """, unsafe_allow_html=True)
