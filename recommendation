import streamlit as st
import pandas as pd
from mlxtend.preprocessing import TransactionEncoder
from mlxtend.frequent_patterns import fpgrowth, association_rules

# Load transaction data
file_path = "orders_details.xlsx"
df = pd.read_excel(file_path)
df['Items Bought'] = df['Items Bought'].apply(lambda x: x.split(','))

# Encode transactions
te = TransactionEncoder()
te_ary = te.fit(df['Items Bought']).transform(df['Items Bought'])
df_encoded = pd.DataFrame(te_ary, columns=te.columns_)

# FP-Growth for bundles
frequent_itemsets = fpgrowth(df_encoded, min_support=0.05, use_colnames=True)
frequent_itemsets['support_count'] = frequent_itemsets['support'] * len(df)
frequent_itemsets['length'] = frequent_itemsets['itemsets'].apply(lambda x: len(x))
bundle_itemsets = frequent_itemsets[frequent_itemsets['length'] >= 2]

# Association rules for recommendations
rules = association_rules(frequent_itemsets, metric="confidence", min_threshold=0.6)
rules = rules.sort_values(by='confidence', ascending=False)

st.set_page_config(page_title="Product Bundling & Recommendations", layout="wide")
st.title("📦 Product Bundling & 🤖 Recommendations Dashboard")

# --- Bundle Cards as 3-column grid ---
st.subheader("Top Product Bundles")
columns = st.columns(3)
for i, (index, row) in enumerate(bundle_itemsets.iterrows()):
    col = columns[i % 3]
    with col:
        st.markdown(f"""
            <div style='border: 2px solid #6c757d; border-radius: 12px; padding: 20px; margin: 10px 0; background-color: #f1f3f4; font-size: 18px;'>
                <p><strong>🧃 Products:</strong> {'<br>'.join(row['itemsets'])}</p>
                <p><strong>Support Count:</strong> {int(row['support_count'])}</p>
                <button style='padding: 6px 12px; font-size: 16px; background-color: #28a745; color: white; border: none; border-radius: 8px;'>💡 Mark as Suggested Combo</button>
            </div>
        """, unsafe_allow_html=True)

# --- Recommendation Network ---
st.subheader("Product Recommendations")
for idx, row in rules.iterrows():
    with st.container():
        antecedents = ', '.join(row['antecedents'])
        consequents = ', '.join(row['consequents'])
        st.markdown(f"""
            <div style='border: 2px solid #0d6efd; border-radius: 12px; padding: 20px; margin: 10px 0; background-color: #e7f1ff; font-size: 18px;'>
                <p><strong>🛒 If customer buys:</strong></p>
                <p style='color: #0d6efd; font-weight: bold;'>{antecedents}</p>
                <hr style='border: 1px dashed #0d6efd;'>
                <p><strong>👉 Recommend:</strong></p>
                <p style='color: #198754; font-weight: bold;'>{consequents}</p>
                <p><strong>Confidence:</strong> {row['confidence'] * 100:.0f}%</p>
                <button style='padding: 6px 12px; font-size: 16px; background-color: #ffc107; color: black; border: none; border-radius: 8px;'>🔍 Show Similar Rules</button>
            </div>
        """, unsafe_allow_html=True)
